{"version":3,"sources":["redux/action-types/movies.types.js","redux/reducers/movies.reducer.js","redux/reducers/index.js","helpers/axios.helper.js","services/movies.service.js","redux/sagas/movie.saga.js","redux/sagas/index.js","components/Movie/movie.jsx","components/Header/header.jsx","components/NotFound/Not-found.jsx","components/FullMovie/full-movie.jsx","app/App.jsx","configurations/application.config.jsx","containers/Movies/movies.container.jsx","containers/FullMovie/full-movie.container.jsx","configurations/routing.config.jsx","configurations/movies.config.js","index.jsx"],"names":["MOVIES_REQUEST","MOVIES_SUCCESS","MOVIES_FAIL","initialState","movies","loading","reducers","combineReducers","state","action","type","payload","axiosInstance","axios","create","baseURL","defaultUrl","MoviesService","get","apiKey","id","getMovies","getMoviesSaga","moviesSagas","call","results","data","put","console","log","takeLatest","all","sagas","Container","maxWidth","Box","className","src","poster_path","alt","title","to","Header","history","useHistory","useState","inputValue","setInputValue","useSelector","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","Typography","variant","component","onClick","push","TextField","label","onKeyDown","key","value","target","foundMovie","find","toLowerCase","startsWith","alert","onChange","tagline","overview","release_date","budget","runtime","vote_average","RoutingConfig","saga","createSagaMiddleware","middleware","logger","store","createStore","composeWithDevTools","applyMiddleware","run","dispatch","useDispatch","useEffect","length","map","movie","match","params","fullMovie","setFullMovie","getMovie","a","getMovieById","response","path","exact","MoviesContainer","FullMovieContainer","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf7fb77d.chunk.js","sourcesContent":["export const MOVIES_REQUEST = 'MOVIES_REQUEST';\nexport const MOVIES_SUCCESS = 'MOVIES_SUCCESS';\nexport const MOVIES_FAIL = 'MOVIES_FAIL';\n","import { MOVIES_SUCCESS, MOVIES_FAIL, MOVIES_REQUEST } from \"../action-types\";\n\nconst initialState = {\n    movies: [],\n\n    loading: false,\n};\n\nexport default function movies(state = initialState, action) {\n    switch (action.type) {\n        case MOVIES_REQUEST:\n            return {\n                ...state,\n                loading: true\n            };\n\n        case MOVIES_SUCCESS:\n            return {\n                ...state,\n                movies: action.payload,\n                loading: false\n            };\n\n        case MOVIES_FAIL:\n            return {\n                ...state,\n                movies: [],\n                loading: false\n            };\n\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\n\nimport movies from './movies.reducer';\n\nconst reducers = combineReducers({\n    movies\n});\n\nexport { reducers };\n","import axios from 'axios';\n\nimport { defaultUrl } from '../configurations';\n\nconst axiosInstance = axios.create({ baseURL: defaultUrl });\n\nexport { axiosInstance };\n","import { apiKey, defaultUrl } from '../configurations';\nimport { axiosInstance } from '../helpers';\n\nexport class MoviesService {\n  static getMovies() {\n    return axiosInstance.get(`${defaultUrl}/popular?api_key=${apiKey}&language=en-US&page=1`);\n  }\n\n  static getMovieById(id) {\n    return axiosInstance.get(`${defaultUrl}/${id}?api_key=${apiKey}&language=en-US`);\n  }\n}\n","import { call, put, all, takeLatest } from \"redux-saga/effects\";\n\nimport { MOVIES_REQUEST, MOVIES_FAIL, MOVIES_SUCCESS } from \"../action-types\";\nimport { MoviesService } from \"../../services\";\n\nfunction* getMovies() {\n    try {\n        const { data: { results } } = yield call(MoviesService.getMovies);\n\n        yield put({\n            type: MOVIES_SUCCESS,\n            payload: results\n        });\n    } catch (error) {\n        console.log('Error', error);\n\n        yield put({ type: MOVIES_FAIL });\n    }\n}\n\nfunction* getMoviesSaga() {\n    yield takeLatest(MOVIES_REQUEST, getMovies);\n}\n\nexport function* moviesSagas() {\n    yield all([\n        call(getMoviesSaga)\n    ])\n}","import { all, call } from \"redux-saga/effects\";\n\nimport { moviesSagas } from \"./movie.saga\";\n\nexport function* sagas() {\n    yield all([\n        call(moviesSagas),\n    ]);\n}","import {Link} from \"react-router-dom\";\nimport React from 'react';\n\nimport './movie.style.css';\nimport {Container} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\n\nexport default ({data}) => (\n\n    <div>\n        <Container maxWidth=\"sm\">\n            <Box>\n                <img className={'img'}\n                     src={'https://image.tmdb.org/t/p/w500' + data.poster_path}\n                     alt=\"defaultPhoto\"/>\n                <h5> {data.title}</h5>\n                <Link to={`/${data.id}`}> Open full </Link>\n                <hr className={\"hr\"}/>\n            </Box>\n\n        </Container>\n\n    </div>\n)","import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MovieIcon from '@mui/icons-material/Movie';\nimport Toolbar from '@mui/material/Toolbar';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\n\nimport {useSelector} from \"react-redux\";\nimport {TextField} from \"@mui/material\";\nimport {useHistory} from \"react-router\";\nimport {useState} from \"react\";\n\n\nexport default function Header() {\n    const history = useHistory();\n    const [inputValue, setInputValue] = useState('');\n    const {movies} = useSelector(({movies}) => movies);\n\n    const handleKeyDown = ({key, target: {value}}) => {\n        if (key === 'Enter') {\n            const foundMovie = movies.find(({title}) => title.toLowerCase().startsWith(value.toLowerCase()))\n\n            setInputValue('');\n\n            if (!foundMovie) {\n                return alert('Movie not found');\n            }\n\n            history.push(`/${foundMovie.id}`)\n        }\n    }\n\n    return (\n        <Box sx={{flexGrow: 1}}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        sx={{mr: 2}}\n                    >\n                        <MovieIcon/>\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\"\n                        sx={{flexGrow: 1}}\n                        onClick={() => {\n                            history.push(`/`)\n                        }}\n                    >\n                        Movies\n                    </Typography>\n                    <TextField\n                        id=\"outlined-basic\"\n                        color='primary'\n                        label=\"Seach\"\n                        variant=\"outlined\"\n                        onKeyDown={handleKeyDown}\n                        value={inputValue}\n                        onChange={({target: {value}}) => setInputValue(value)}\n                    />\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}","import React from 'react';\n\nimport './Not-found.style.css';\n\nexport default () => (\n  <div>\n    <p>404 Page not found</p>\n  </div>\n);\n","import React from 'react';\n\nimport './full-movie.style.css';\n\nexport default ({data}) => {\n    console.log(data);\n    return (\n\n        <div>\n            <div className={'wrapper margin'}>\n                <div className={'d-flex'}>\n                    <div>\n                        <img className={'img2'}\n                             src={'https://image.tmdb.org/t/p/w500' + data.poster_path}\n                             alt=\"defaultPhoto\"/>\n                    </div>\n                    <div className={'blockInfo height'}>\n                        <div><h5 className={'white'}>\"{data.title}\"</h5></div>\n                        <div className={'white'}> Movie quote:\"{data.tagline}\"</div>\n                        <div className={'white'}>Description: <br/><p className={'white font-size'}>\"{data.overview}\"</p></div>\n                        <div className={' d-flex flex-end justify-content'}>\n                            <div>Release date: {data.release_date}</div>\n                            <div>Budget: {data.budget}</div>\n                            <div>Duration: {data.runtime}</div>\n                            <div>Rating: {data.vote_average}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n","import React from 'react';\n\nimport './App.css';\nimport { Header } from \"../components\";\nimport { RoutingConfig } from '../configurations';\n\nexport default () => (\n  <>\n    <Header />\n    { RoutingConfig() }\n  </>\n);\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware, createStore } from \"redux\";\nimport { HashRouter  } from 'react-router-dom';\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider } from \"react-redux\";\nimport { logger } from 'redux-logger';\nimport React from 'react';\n\nimport { reducers } from \"../redux/reducers\";\nimport { sagas } from \"../redux/sagas\";\nimport App from '../app/App';\n\nconst saga = createSagaMiddleware();\nconst middleware = [saga, logger];\n\nexport const store = createStore(\n    reducers,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nsaga.run(sagas);\n\nexport default () => (\n    <Provider store={store}>\n        <HashRouter >\n            <App />\n        </HashRouter >\n    </Provider>\n);\n","import { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect } from 'react';\n\nimport './movies.container.style.css';\nimport { Movie } from '../../components';\nimport { MOVIES_REQUEST } from \"../../redux/action-types\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { movies } = useSelector(({ movies }) => movies);\n\n  useEffect(() => {\n    dispatch({ type: MOVIES_REQUEST })\n  }, [dispatch]);\n\n  return (\n    <div>\n      {\n        movies.length && movies.map((movie) => <Movie key={movie.id} data={movie} />)\n      }\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport './full-movie.container.style.css';\nimport { FullMovie } from \"../../components\";\nimport { MoviesService } from '../../services';\n\nexport default ({ match : { params: { id } } }) => {\n  const [fullMovie, setFullMovie] = useState();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const response = await MoviesService.getMovieById(id);\n      setFullMovie(response.data);\n    };\n\n    getMovie();\n  }, [id]);\n\n\n  return (\n    <div>\n      {\n        fullMovie && <FullMovie data={fullMovie}/>\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport { FullMovieContainer, MoviesContainer } from \"../containers\";\nimport { NotFound } from '../components';\n\nexport const RoutingConfig = () => (\n  <Switch>\n      <Route path=\"/\" exact component={MoviesContainer} />\n      <Route path=\"/:id\" exact component={FullMovieContainer} />\n\n      <Route render={() => <NotFound />} />\n  </Switch>\n);\n","export const defaultUrl = 'https://api.themoviedb.org/3/movie';\nexport const apiKey = '1107d2ef146a20d972d0593829f0f83b';\n","import ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport { applicationConfig } from './configurations';\n\nReactDOM.render(applicationConfig(), document.getElementById('root'));\n"],"sourceRoot":""}